@model ProgramingTraffic.Models.ListViewModel

@* Read the current page and total pages *@

@{
    var currentPage = Model.currentPage;
    var totalPages = Model.totalPages;
}

@* Check do we need to display pagination links *@

@if (currentPage > 1 || currentPage < totalPages)
{
    var p = string.Format("p={0}", currentPage - 1);
    var n = string.Format("p={0}", currentPage + 1);

    @* If the view is rendered for "search" action append the pagination value with "&" *@

    //if (ViewContext.RouteData.Values["action"].ToString()
    //.Equals("search", StringComparison.OrdinalIgnoreCase))
    //{
    //    var s = String.Format("?s={0}", ViewContext.RequestContext.HttpContext.Request.QueryString["s"]);
    //    p = String.Format("{0}&{1}", s, p);
    //    n = String.Format("{0}&{1}", s, n);
    //}
    //else
    //{
    p = String.Concat("?", p);
    n = String.Concat("?", n);
    //}

  <!--pagination links-->
    <ul class="pager">
        @if (currentPage < totalPages)
        { 
            <li class="next">
               <a href="@n">Older Posts &rarr;</a>
            </li>        
        }
        @if (currentPage > 1)
        {
            <li class="previous">
                <a href="@p">&larr; Newer Posts</a>
            </li>
        }
    </ul>
    @*<div class="pager">

        <a href="@p" title="Previous" class="previous"
                   style="visibility:@(currentPage > 1 ? "visible" : "collapse")"><< previous</a>

        <a href="@n" title="Next" class="next"
                   style="visibility:@(currentPage < totalPages ? "visible" : "collapse")">next >></a>

    </div>*@
}
